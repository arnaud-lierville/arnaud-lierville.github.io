const autoCompleteCallbackData = [

    // Geometry
    { value: 'Intersect', score: 1, meta: '( <Object>, <Object> )' },
    { value: 'Length', score: 1, meta: '( <Object> )' },
    { value: 'Line', score: 1, meta: '( <Point>, <Point|Line|Vector> )' },
    { value: 'Midpoint', score: 1, meta: '( <Segment> )' },
    { value: 'Perimeter', score: 1, meta: '( <Polygon> )' },
    { value: 'PerpendicularLine', score: 1, meta: '( <Point>, <Line> )' },
    { value: 'Point', score: 1, meta: '( <Object> )' },
    { value: 'Polygon', score: 1, meta: '( <Point>, ..., <Point> )' },
    { value: 'Polyline', score: 1, meta: '( <Point>, ..., <Point> )' },
    { value: 'RigidPolygon', score: 1, meta: '( <Polygon> )' },
    { value: 'Segment', score: 1, meta: '( <Point>, <Point|Length> )' },
    { value: 'Slope', score: 1, meta: '( <Line> )' },
    { value: 'Tangent', score: 1, meta: '( <Point>, <Conic> )' },

    // TODO : 'some'
    // Missing :
    // https://wiki.geogebra.org/en/3D_Commands
    // https://wiki.geogebra.org/en/CAS_Restricted_Commands
    // https://wiki.geogebra.org/en/CAS_Specific_Commands

    // All commands
    { value: 'AffineRatio', score: 1 },//, meta: 'some' }, 
    { value: 'Angle', score: 1 },//, meta: 'some' }, 
    { value: 'AngleBisector', score: 1 },//, meta: 'some' }, 
    { value: 'ANOVA', score: 1 },//, meta: 'some' }, 
    { value: 'Append', score: 1 },//, meta: 'some' }, 
    { value: 'ApplyMatrix', score: 1 },//, meta: 'some' }, 
    { value: 'Arc', score: 1 },//, meta: 'some' }, 
    { value: 'Area', score: 1 },//, meta: 'some' }, 
    { value: 'AreCollinear', score: 1 },//, meta: 'some' }, 
    { value: 'AreConcurrent', score: 1 },//, meta: 'some' }, 
    { value: 'AreConcyclic', score: 1 },//, meta: 'some' }, 
    { value: 'AreCongruent', score: 1 },//, meta: 'some' }, 
    { value: 'AreEqual', score: 1 },//, meta: 'some' }, 
    { value: 'AreParallel', score: 1 },//, meta: 'some' }, 
    { value: 'ArePerpendicular', score: 1 },//, meta: 'some' }, 
    { value: 'Assume', score: 1 },//, meta: 'some' }, 
    { value: 'Asymptote', score: 1 },//, meta: 'some' }, 
    { value: 'AttachCopyToView', score: 1 },//, meta: 'some' }, 
    { value: 'Axes', score: 1 },//, meta: 'some' }, 
    { value: 'AxisStepX', score: 1 },//, meta: 'some' }, 
    { value: 'AxisStepY', score: 1 },//, meta: 'some' }, 
    { value: 'BarChart', score: 1 },//, meta: 'some' }, 
    { value: 'Barycenter', score: 1 },//, meta: 'some' }, 
    { value: 'Bernoulli', score: 1 },//, meta: 'some' }, 
    { value: 'BinomialCoefficient', score: 1 },//, meta: 'some' }, 
    { value: 'BinomialDist', score: 1 },//, meta: 'some' }, 
    { value: 'Bottom', score: 1 },//, meta: 'some' }, 
    { value: 'BoxPlot', score: 1 },//, meta: 'some' }, 
    { value: 'Button', score: 1 },//, meta: 'some' }, 
    { value: 'Cauchy', score: 1 },//, meta: 'some' }, 
    { value: 'Cell', score: 1 },//, meta: 'some' }, 
    { value: 'CellRange', score: 1 },//, meta: 'some' }, 
    { value: 'Center', score: 1 },//, meta: 'some' }, 
    { value: 'CenterView', score: 1 },//, meta: 'some' }, 
    { value: 'Centroid', score: 1 },//, meta: 'some' }, 
    { value: 'CFactor', score: 1 },//, meta: 'some' }, 
    { value: 'CharacteristicPolynomial', score: 1 },//, meta: 'some' }, 
    { value: 'Checkbox', score: 1 },//, meta: 'some' }, 
    { value: 'ChiSquared', score: 1 },//, meta: 'some' }, 
    { value: 'ChiSquaredTest', score: 1 },//, meta: 'some' }, 
    { value: 'CIFactor', score: 1 },//, meta: 'some' }, 
    { value: 'Circle', score: 1 },//, meta: 'some' }, 
    { value: 'CircularArc', score: 1 },//, meta: 'some' }, 
    { value: 'CircularSector', score: 1 },//, meta: 'some' }, 
    { value: 'CircumcircularArc', score: 1 },//, meta: 'some' }, 
    { value: 'CircumcircularSector', score: 1 },//, meta: 'some' }, 
    { value: 'Circumference', score: 1 },//, meta: 'some' }, 
    { value: 'Classes', score: 1 },//, meta: 'some' }, 
    { value: 'ClosestPoint', score: 1 },//, meta: 'some' }, 
    { value: 'ClosestPointRegion', score: 1 },//, meta: 'some' }, 
    { value: 'Coefficients', score: 1 },//, meta: 'some' }, 
    { value: 'Column', score: 1 },//, meta: 'some' }, 
    { value: 'ColumnName', score: 1 },//, meta: 'some' }, 
    { value: 'CommonDenominator', score: 1 },//, meta: 'some' }, 
    { value: 'CompleteSquare', score: 1 },//, meta: 'some' }, 
    { value: 'ComplexRoot', score: 1 },//, meta: 'some' }, 
    { value: 'Cone', score: 1 },//, meta: 'some' }, 
    { value: 'Conic', score: 1 },//, meta: 'some' }, 
    { value: 'ConjugateDiameter', score: 1 },//, meta: 'some' }, 
    { value: 'ConstructionStep', score: 1 },//, meta: 'some' }, 
    { value: 'ContingencyTable', score: 1 },//, meta: 'some' }, 
    { value: 'ContinuedFraction', score: 1 },//, meta: 'some' }, 
    { value: 'ConvexHull', score: 1 },//, meta: 'some' }, 
    { value: 'CopyFreeObject', score: 1 },//, meta: 'some' }, 
    { value: 'Corner', score: 1 },//, meta: 'some' }, 
    { value: 'CorrelationCoefficient', score: 1 },//, meta: 'some' }, 
    { value: 'CountIf', score: 1 },//, meta: 'some' }, 
    { value: 'Covariance', score: 1 },//, meta: 'some' }, 
    { value: 'Cross', score: 1 },//, meta: 'some' }, 
    { value: 'CrossRatio', score: 1 },//, meta: 'some' }, 
    { value: 'CSolutions', score: 1 },//, meta: 'some' }, 
    { value: 'CSolve', score: 1 },//, meta: 'some' }, 
    { value: 'Cube', score: 1 },//, meta: 'some' }, 
    { value: 'Cubic', score: 1 },//, meta: 'some' }, 
    { value: 'Curvature', score: 1 },//, meta: 'some' }, 
    { value: 'CurvatureVector', score: 1 },//, meta: 'some' }, 
    { value: 'Curve', score: 1 },//, meta: 'some' }, 
    { value: 'Cylinder', score: 1 },//, meta: 'some' }, 
    { value: 'DataFunction', score: 1 },//, meta: 'some' }, 
    { value: 'Degree', score: 1 },//, meta: 'some' }, 
    { value: 'DelaunayTriangulation', score: 1 },//, meta: 'some' }, 
    { value: 'Delete', score: 1 },//, meta: 'some' }, 
    { value: 'Denominator', score: 1 },//, meta: 'some' }, 
    { value: 'Derivative', score: 1 },//, meta: 'some' }, 
    { value: 'Determinant', score: 1 },//, meta: 'some' }, 
    { value: 'Difference', score: 1 },//, meta: 'some' }, 
    { value: 'Dilate', score: 1 },//, meta: 'some' }, 
    { value: 'Dimension', score: 1 },//, meta: 'some' }, 
    { value: 'Direction', score: 1 },//, meta: 'some' }, 
    { value: 'Directrix', score: 1 },//, meta: 'some' }, 
    { value: 'Distance', score: 1 },//, meta: 'some' }, 
    { value: 'Div', score: 1 },//, meta: 'some' }, 
    { value: 'Division', score: 1 },//, meta: 'some' }, 
    { value: 'Divisors', score: 1 },//, meta: 'some' }, 
    { value: 'DivisorsList', score: 1 },//, meta: 'some' }, 
    { value: 'DivisorsSum', score: 1 },//, meta: 'some' }, 
    { value: 'Dodecahedron', score: 1 },//, meta: 'some' }, 
    { value: 'Dot', score: 1 },//, meta: 'some' }, 
    { value: 'DotPlot', score: 1 },//, meta: 'some' }, 
    { value: 'DynamicCoordinates', score: 1 },//, meta: 'some' }, 
    { value: 'Eccentricity', score: 1 },//, meta: 'some' }, 
    { value: 'Eigenvalues', score: 1 },//, meta: 'some' }, 
    { value: 'Eigenvectors', score: 1 },//, meta: 'some' }, 
    { value: 'Element', score: 1 },//, meta: 'some' }, 
    { value: 'Eliminate', score: 1 },//, meta: 'some' }, 
    { value: 'Ellipse', score: 1 },//, meta: 'some' }, 
    { value: 'Ends', score: 1 },//, meta: 'some' }, 
    { value: 'Envelope', score: 1 },//, meta: 'some' }, 
    { value: 'Erlang', score: 1 },//, meta: 'some' }, 
    { value: 'Execute', score: 1 },//, meta: 'some' }, 
    { value: 'Expand', score: 1 },//, meta: 'some' }, 
    { value: 'Exponential', score: 1 },//, meta: 'some' }, 
    { value: 'ExportImage', score: 1 },//, meta: 'some' }, 
    { value: 'ExtendedGCD', score: 1 },//, meta: 'some' }, 
    { value: 'Extremum', score: 1 },//, meta: 'some' }, 
    { value: 'Factor', score: 1 },//, meta: 'some' }, 
    { value: 'Factors', score: 1 },//, meta: 'some' }, 
    { value: 'FDistribution', score: 1 },//, meta: 'some' }, 
    { value: 'FillCells', score: 1 },//, meta: 'some' }, 
    { value: 'FillColumn', score: 1 },//, meta: 'some' }, 
    { value: 'FillRow', score: 1 },//, meta: 'some' }, 
    { value: 'First', score: 1 },//, meta: 'some' }, 
    { value: 'Fit', score: 1 },//, meta: 'some' }, 
    { value: 'FitExp', score: 1 },//, meta: 'some' }, 
    { value: 'FitGrowth', score: 1 },//, meta: 'some' }, 
    { value: 'FitImplicit', score: 1 },//, meta: 'some' }, 
    { value: 'FitLine', score: 1 },//, meta: 'some' }, 
    { value: 'FitLineX', score: 1 },//, meta: 'some' }, 
    { value: 'FitLog', score: 1 },//, meta: 'some' }, 
    { value: 'FitLogistic', score: 1 },//, meta: 'some' }, 
    { value: 'FitPoly', score: 1 },//, meta: 'some' }, 
    { value: 'FitPow', score: 1 },//, meta: 'some' }, 
    { value: 'FitSin', score: 1 },//, meta: 'some' }, 
    { value: 'Flatten', score: 1 },//, meta: 'some' }, 
    { value: 'Focus', score: 1 },//, meta: 'some' }, 
    { value: 'FormulaText', score: 1 },//, meta: 'some' }, 
    { value: 'FractionText', score: 1 },//, meta: 'some' }, 
    { value: 'Frequency', score: 1 },//, meta: 'some' }, 
    { value: 'FrequencyPolygon', score: 1 },//, meta: 'some' }, 
    { value: 'FrequencyTable', score: 1 },//, meta: 'some' }, 
    { value: 'FromBase', score: 1 },//, meta: 'some' }, 
    { value: 'Function', score: 1 },//, meta: 'some' }, 
    { value: 'FutureValue', score: 1 },//, meta: 'some' }, 
    { value: 'Gamma', score: 1 },//, meta: 'some' }, 
    { value: 'GCD', score: 1 },//, meta: 'some' }, 
    { value: 'GeometricMean', score: 1 },//, meta: 'some' }, 
    { value: 'GetTime', score: 1 },//, meta: 'some' }, 
    { value: 'GroebnerDegRevLex', score: 1 },//, meta: 'some' }, 
    { value: 'GroebnerLex', score: 1 },//, meta: 'some' }, 
    { value: 'GroebnerLexDeg', score: 1 },//, meta: 'some' }, 
    { value: 'HarmonicMean', score: 1 },//, meta: 'some' }, 
    { value: 'Height', score: 1 },//, meta: 'some' }, 
    { value: 'HideLayer', score: 1 },//, meta: 'some' }, 
    { value: 'Histogram', score: 1 },//, meta: 'some' }, 
    { value: 'HistogramRight', score: 1 },//, meta: 'some' }, 
    { value: 'Hyperbola', score: 1 },//, meta: 'some' }, 
    { value: 'HyperGeometric', score: 1 },//, meta: 'some' }, 
    { value: 'Icosahedron', score: 1 },//, meta: 'some' }, 
    { value: 'Identity', score: 1 },//, meta: 'some' }, 
    { value: 'If', score: 1 },//, meta: 'some' }, 
    { value: 'IFactor', score: 1 },//, meta: 'some' }, 
    { value: 'ImplicitCurve', score: 1 },//, meta: 'some' }, 
    { value: 'ImplicitDerivative', score: 1 },//, meta: 'some' }, 
    { value: 'Incircle', score: 1 },//, meta: 'some' }, 
    { value: 'IndexOf', score: 1 },//, meta: 'some' }, 
    { value: 'InfiniteCone', score: 1 },//, meta: 'some' }, 
    { value: 'InfiniteCylinder', score: 1 },//, meta: 'some' }, 
    { value: 'InflectionPoint', score: 1 },//, meta: 'some' }, 
    { value: 'InputBox', score: 1 },//, meta: 'some' }, 
    { value: 'Insert', score: 1 },//, meta: 'some' }, 
    { value: 'Integral', score: 1 },//, meta: 'some' }, 
    { value: 'IntegralBetween', score: 1 },//, meta: 'some' }, 
    { value: 'IntegralSymbolic', score: 1 },//, meta: 'some' }, 
    { value: 'InteriorAngles', score: 1 },//, meta: 'some' }, 
    { value: 'Intersect', score: 1 },//, meta: 'some' }, 
    { value: 'IntersectConic', score: 1 },//, meta: 'some' }, 
    { value: 'Intersection', score: 1 },//, meta: 'some' }, 
    { value: 'IntersectPath', score: 1 },//, meta: 'some' }, 
    { value: 'InverseBinomial', score: 1 },//, meta: 'some' }, 
    { value: 'InverseCauchy', score: 1 },//, meta: 'some' }, 
    { value: 'InverseChiSquared', score: 1 },//, meta: 'some' }, 
    { value: 'InverseExponential', score: 1 },//, meta: 'some' }, 
    { value: 'InverseFDistribution', score: 1 },//, meta: 'some' }, 
    { value: 'InverseGamma', score: 1 },//, meta: 'some' }, 
    { value: 'InverseHyperGeometric', score: 1 },//, meta: 'some' }, 
    { value: 'InverseLaplace', score: 1 },//, meta: 'some' }, 
    { value: 'InverseLogistic', score: 1 },//, meta: 'some' }, 
    { value: 'InverseLogNormal', score: 1 },//, meta: 'some' }, 
    { value: 'InverseNormal', score: 1 },//, meta: 'some' }, 
    { value: 'InversePascal', score: 1 },//, meta: 'some' }, 
    { value: 'InversePoisson', score: 1 },//, meta: 'some' }, 
    { value: 'InverseTDistribution', score: 1 },//, meta: 'some' }, 
    { value: 'InverseWeibull', score: 1 },//, meta: 'some' }, 
    { value: 'InverseZipf', score: 1 },//, meta: 'some' }, 
    { value: 'Invert', score: 1 },//, meta: 'some' }, 
    { value: 'IsDefined', score: 1 },//, meta: 'some' }, 
    { value: 'IsInRegion', score: 1 },//, meta: 'some' }, 
    { value: 'IsInteger', score: 1 },//, meta: 'some' }, 
    { value: 'IsPrime', score: 1 },//, meta: 'some' }, 
    { value: 'IsTangent', score: 1 },//, meta: 'some' }, 
    { value: 'IsVertexForm', score: 1 },//, meta: 'some' }, 
    { value: 'Iteration', score: 1 },//, meta: 'some' }, 
    { value: 'IterationList', score: 1 },//, meta: 'some' }, 
    { value: 'Join', score: 1 },//, meta: 'some' }, 
    { value: 'JordanDiagonalization', score: 1 },//, meta: 'some' }, 
    { value: 'KeepIf', score: 1 },//, meta: 'some' }, 
    { value: 'Laplace', score: 1 },//, meta: 'some' }, 
    { value: 'Last', score: 1 },//, meta: 'some' }, 
    { value: 'LCM', score: 1 },//, meta: 'some' }, 
    { value: 'LeftSide', score: 1 },//, meta: 'some' }, 
    { value: 'LeftSum', score: 1 },//, meta: 'some' }, 
    { value: 'Length', score: 1 },//, meta: 'some' }, 
    { value: 'LetterToUnicode', score: 1 },//, meta: 'some' }, 
    { value: 'Limit', score: 1 },//, meta: 'some' }, 
    { value: 'LimitAbove', score: 1 },//, meta: 'some' }, 
    { value: 'LimitBelow', score: 1 },//, meta: 'some' }, 
    { value: 'Line', score: 1 },//, meta: 'some' }, 
    { value: 'LinearEccentricity', score: 1 },//, meta: 'some' }, 
    { value: 'LineGraph', score: 1 },//, meta: 'some' }, 
    { value: 'Locus', score: 1 },//, meta: 'some' }, 
    { value: 'LocusEquation', score: 1 },//, meta: 'some' }, 
    { value: 'Logistic', score: 1 },//, meta: 'some' }, 
    { value: 'LogNormal', score: 1 },//, meta: 'some' }, 
    { value: 'LowerSum', score: 1 },//, meta: 'some' }, 
    { value: 'LUDecomposition', score: 1 },//, meta: 'some' }, 
    { value: 'MAD', score: 1 },//, meta: 'some' }, 
    { value: 'MajorAxis', score: 1 },//, meta: 'some' }, 
    { value: 'MatrixRank', score: 1 },//, meta: 'some' }, 
    { value: 'Max', score: 1 },//, meta: 'some' }, 
    { value: 'Maximize', score: 1 },//, meta: 'some' }, 
    { value: 'Mean', score: 1 },//, meta: 'some' }, 
    { value: 'MeanX', score: 1 },//, meta: 'some' }, 
    { value: 'MeanY', score: 1 },//, meta: 'some' }, 
    { value: 'Median', score: 1 },//, meta: 'some' }, 
    { value: 'Midpoint', score: 1 },//, meta: 'some' }, 
    { value: 'Min', score: 1 },//, meta: 'some' }, 
    { value: 'MinimalPolynomial', score: 1 },//, meta: 'some' }, 
    { value: 'Minimize', score: 1 },//, meta: 'some' }, 
    { value: 'MinimumSpanningTree', score: 1 },//, meta: 'some' }, 
    { value: 'MinorAxis', score: 1 },//, meta: 'some' }, 
    { value: 'MixedNumber', score: 1 },//, meta: 'some' }, 
    { value: 'Mod', score: 1 },//, meta: 'some' }, 
    { value: 'Mode', score: 1 },//, meta: 'some' }, 
    { value: 'ModularExponent', score: 1 },//, meta: 'some' }, 
    { value: 'Name', score: 1 },//, meta: 'some' }, 
    { value: 'NDerivative', score: 1 },//, meta: 'some' }, 
    { value: 'Net', score: 1 },//, meta: 'some' }, 
    { value: 'NextPrime', score: 1 },//, meta: 'some' }, 
    { value: 'NIntegral', score: 1 },//, meta: 'some' }, 
    { value: 'Normal', score: 1 },//, meta: 'some' }, 
    { value: 'Normalize', score: 1 },//, meta: 'some' }, 
    { value: 'NormalQuantilePlot', score: 1 },//, meta: 'some' }, 
    { value: 'NPr', score: 1 },//, meta: 'some' }, 
    { value: 'NSolutions', score: 1 },//, meta: 'some' }, 
    { value: 'NSolve', score: 1 },//, meta: 'some' }, 
    { value: 'NSolveODE', score: 1 },//, meta: 'some' }, 
    { value: 'Numerator', score: 1 },//, meta: 'some' }, 
    { value: 'Numeric', score: 1 },//, meta: 'some' }, 
    { value: 'Object', score: 1 },//, meta: 'some' }, 
    { value: 'Octahedron', score: 1 },//, meta: 'some' }, 
    { value: 'Ordinal', score: 1 },//, meta: 'some' }, 
    { value: 'OrdinalRank', score: 1 },//, meta: 'some' }, 
    { value: 'OsculatingCircle', score: 1 },//, meta: 'some' }, 
    { value: 'Pan', score: 1 },//, meta: 'some' }, 
    { value: 'Parabola', score: 1 },//, meta: 'some' }, 
    { value: 'Parameter', score: 1 },//, meta: 'some' }, 
    { value: 'ParametricDerivative', score: 1 },//, meta: 'some' }, 
    { value: 'ParseToFunction', score: 1 },//, meta: 'some' }, 
    { value: 'ParseToNumber', score: 1 },//, meta: 'some' }, 
    { value: 'PartialFractions', score: 1 },//, meta: 'some' }, 
    { value: 'Pascal', score: 1 },//, meta: 'some' }, 
    { value: 'PathParameter', score: 1 },//, meta: 'some' }, 
    { value: 'Payment', score: 1 },//, meta: 'some' }, 
    { value: 'Percentile', score: 1 },//, meta: 'some' }, 
    { value: 'Perimeter', score: 1 },//, meta: 'some' }, 
    { value: 'Periods', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularBisector', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularLine', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularPlane', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularVector', score: 1 },//, meta: 'some' }, 
    { value: 'PieChart', score: 1 },//, meta: 'some' }, 
    { value: 'Plane', score: 1 },//, meta: 'some' }, 
    { value: 'PlaneBisector', score: 1 },//, meta: 'some' }, 
    { value: 'PlaySound', score: 1 },//, meta: 'some' }, 
    { value: 'PlotSolve', score: 1 },//, meta: 'some' }, 
    { value: 'Point', score: 1 },//, meta: 'some' }, 
    { value: 'PointIn', score: 1 },//, meta: 'some' }, 
    { value: 'PointList', score: 1 },//, meta: 'some' }, 
    { value: 'Poisson', score: 1 },//, meta: 'some' }, 
    { value: 'Polar', score: 1 },//, meta: 'some' }, 
    { value: 'Polygon', score: 1 },//, meta: 'some' }, 
    { value: 'Polyline', score: 1 },//, meta: 'some' }, 
    { value: 'Polynomial', score: 1 },//, meta: 'some' }, 
    { value: 'PresentValue', score: 1 },//, meta: 'some' }, 
    { value: 'PreviousPrime', score: 1 },//, meta: 'some' }, 
    { value: 'PrimeFactors', score: 1 },//, meta: 'some' }, 
    { value: 'Prism', score: 1 },//, meta: 'some' }, 
    { value: 'Product', score: 1 },//, meta: 'some' }, 
    { value: 'Prove', score: 1 },//, meta: 'some' }, 
    { value: 'ProveDetails', score: 1 },//, meta: 'some' }, 
    { value: 'Pyramid', score: 1 },//, meta: 'some' }, 
    { value: 'QRDecomposition', score: 1 },//, meta: 'some' }, 
    //{ value: 'Quartile1', score: 1 },//, meta: 'some' }, 
    //{ value: 'Quartile3', score: 1 },//, meta: 'some' }, 
    { value: 'Radius', score: 1 },//, meta: 'some' }, 
    { value: 'RandomBetween', score: 1 },//, meta: 'some' }, 
    { value: 'RandomBinomial', score: 1 },//, meta: 'some' }, 
    { value: 'RandomDiscrete', score: 1 },//, meta: 'some' }, 
    { value: 'RandomElement', score: 1 },//, meta: 'some' }, 
    { value: 'RandomNormal', score: 1 },//, meta: 'some' }, 
    { value: 'RandomPointIn', score: 1 },//, meta: 'some' }, 
    { value: 'RandomPoisson', score: 1 },//, meta: 'some' }, 
    { value: 'RandomPolynomial', score: 1 },//, meta: 'some' }, 
    { value: 'RandomUniform', score: 1 },//, meta: 'some' }, 
    { value: 'Rate', score: 1 },//, meta: 'some' }, 
    { value: 'Rationalize', score: 1 },//, meta: 'some' }, 
    { value: 'Ray', score: 1 },//, meta: 'some' }, 
    { value: 'ReadText', score: 1 },//, meta: 'some' }, 
    { value: 'RectangleSum', score: 1 },//, meta: 'some' }, 
    { value: 'ReducedRowEchelonForm', score: 1 },//, meta: 'some' }, 
    { value: 'Reflect', score: 1 },//, meta: 'some' }, 
    { value: 'Relation', score: 1 },//, meta: 'some' }, 
    { value: 'RemovableDiscontinuity', score: 1 },//, meta: 'some' }, 
    { value: 'Remove', score: 1 },//, meta: 'some' }, 
    { value: 'RemoveUndefined', score: 1 },//, meta: 'some' }, 
    { value: 'Rename', score: 1 },//, meta: 'some' }, 
    { value: 'Repeat', score: 1 },//, meta: 'some' }, 
    { value: 'ReplaceAll', score: 1 },//, meta: 'some' }, 
    { value: 'ResidualPlot', score: 1 },//, meta: 'some' }, 
    { value: 'Reverse', score: 1 },//, meta: 'some' }, 
    { value: 'RightSide', score: 1 },//, meta: 'some' }, 
    { value: 'RigidPolygon', score: 1 },//, meta: 'some' }, 
    { value: 'Root', score: 1 },//, meta: 'some' }, 
    { value: 'RootList', score: 1 },//, meta: 'some' }, 
    { value: 'RootMeanSquare', score: 1 },//, meta: 'some' }, 
    { value: 'Roots', score: 1 },//, meta: 'some' }, 
    { value: 'Rotate', score: 1 },//, meta: 'some' }, 
    { value: 'RotateText', score: 1 },//, meta: 'some' }, 
    { value: 'Row', score: 1 },//, meta: 'some' }, 
    { value: 'RSquare', score: 1 },//, meta: 'some' }, 
    { value: 'RunClickScript', score: 1 },//, meta: 'some' }, 
    { value: 'RunUpdateScript', score: 1 },//, meta: 'some' }, 
    { value: 'Sample', score: 1 },//, meta: 'some' }, 
    { value: 'SampleSD', score: 1 },//, meta: 'some' }, 
    { value: 'SampleSDX', score: 1 },//, meta: 'some' }, 
    { value: 'SampleSDY', score: 1 },//, meta: 'some' }, 
    { value: 'SampleVariance', score: 1 },//, meta: 'some' }, 
    { value: 'ScientificText', score: 1 },//, meta: 'some' }, 
    { value: 'SD', score: 1 },//, meta: 'some' }, 
    { value: 'SDX', score: 1 },//, meta: 'some' }, 
    { value: 'SDY', score: 1 },//, meta: 'some' }, 
    { value: 'Sector', score: 1 },//, meta: 'some' }, 
    { value: 'Segment', score: 1 },//, meta: 'some' }, 
    { value: 'SelectedElement', score: 1 },//, meta: 'some' }, 
    { value: 'SelectedIndex', score: 1 },//, meta: 'some' }, 
    { value: 'SelectObjects', score: 1 },//, meta: 'some' }, 
    { value: 'Semicircle', score: 1 },//, meta: 'some' }, 
    { value: 'SemiMajorAxisLength', score: 1 },//, meta: 'some' }, 
    { value: 'SemiMinorAxisLength', score: 1 },//, meta: 'some' }, 
    { value: 'Sequence', score: 1 },//, meta: 'some' }, 
    { value: 'SetActiveView', score: 1 },//, meta: 'some' }, 
    { value: 'SetAxesRatio', score: 1 },//, meta: 'some' }, 
    { value: 'SetBackgroundColor', score: 1 },//, meta: 'some' }, 
    { value: 'SetCaption', score: 1 },//, meta: 'some' }, 
    { value: 'SetColor', score: 1 },//, meta: 'some' }, 
    { value: 'SetConditionToShowObject', score: 1 },//, meta: 'some' }, 
    { value: 'SetConstructionStep', score: 1 },//, meta: 'some' }, 
    { value: 'SetCoords', score: 1 },//, meta: 'some' }, 
    { value: 'SetDecoration', score: 1 },//, meta: 'some' }, 
    { value: 'SetDynamicColor', score: 1 },//, meta: 'some' }, 
    { value: 'SetFilling', score: 1 },//, meta: 'some' }, 
    { value: 'SetFixed', score: 1 },//, meta: 'some' }, 
    { value: 'SetImage', score: 1 },//, meta: 'some' }, 
    { value: 'SetLabelMode', score: 1 },//, meta: 'some' }, 
    { value: 'SetLayer', score: 1 },//, meta: 'some' }, 
    { value: 'SetLevelOfDetail', score: 1 },//, meta: 'some' }, 
    { value: 'SetLineStyle', score: 1 },//, meta: 'some' }, 
    { value: 'SetLineThickness', score: 1 },//, meta: 'some' }, 
    { value: 'SetPerspective', score: 1 },//, meta: 'some' }, 
    { value: 'SetPointSize', score: 1 },//, meta: 'some' }, 
    { value: 'SetPointStyle', score: 1 },//, meta: 'some' }, 
    { value: 'SetSeed', score: 1 },//, meta: 'some' }, 
    { value: 'SetSpinSpeed', score: 1 },//, meta: 'some' }, 
    { value: 'SetTooltipMode', score: 1 },//, meta: 'some' }, 
    { value: 'SetTrace', score: 1 },//, meta: 'some' }, 
    { value: 'SetValue', score: 1 },//, meta: 'some' }, 
    { value: 'SetViewDirection', score: 1 },//, meta: 'some' }, 
    { value: 'SetVisibleInView', score: 1 },//, meta: 'some' }, 
    { value: 'Shear', score: 1 },//, meta: 'some' }, 
    { value: 'ShortestDistance', score: 1 },//, meta: 'some' }, 
    { value: 'ShowAxes', score: 1 },//, meta: 'some' }, 
    { value: 'ShowGrid', score: 1 },//, meta: 'some' }, 
    { value: 'ShowLabel', score: 1 },//, meta: 'some' }, 
    { value: 'ShowLayer', score: 1 },//, meta: 'some' }, 
    { value: 'Shuffle', score: 1 },//, meta: 'some' }, 
    { value: 'Side', score: 1 },//, meta: 'some' }, 
    { value: 'SigmaXX', score: 1 },//, meta: 'some' }, 
    { value: 'SigmaXY', score: 1 },//, meta: 'some' }, 
    { value: 'SigmaYY', score: 1 },//, meta: 'some' }, 
    { value: 'Simplify', score: 1 },//, meta: 'some' }, 
    { value: 'Slider', score: 1 },//, meta: 'some' }, 
    { value: 'Slope', score: 1 },//, meta: 'some' }, 
    { value: 'SlopeField', score: 1 },//, meta: 'some' }, 
    { value: 'SlowPlot', score: 1 },//, meta: 'some' }, 
    { value: 'Solutions', score: 1 },//, meta: 'some' }, 
    { value: 'Solve', score: 1 },//, meta: 'some' }, 
    { value: 'SolveCubic', score: 1 },//, meta: 'some' }, 
    { value: 'SolveODE', score: 1 },//, meta: 'some' }, 
    { value: 'SolveQuartic', score: 1 },//, meta: 'some' }, 
    { value: 'Sort', score: 1 },//, meta: 'some' }, 
    { value: 'Spearman', score: 1 },//, meta: 'some' }, 
    { value: 'Sphere', score: 1 },//, meta: 'some' }, 
    { value: 'Spline', score: 1 },//, meta: 'some' }, 
    { value: 'Split', score: 1 },//, meta: 'some' }, 
    { value: 'StartAnimation', score: 1 },//, meta: 'some' }, 
    { value: 'StartRecord', score: 1 },//, meta: 'some' }, 
    { value: 'StemPlot', score: 1 },//, meta: 'some' }, 
    { value: 'StepGraph', score: 1 },//, meta: 'some' }, 
    { value: 'StickGraph', score: 1 },//, meta: 'some' }, 
    { value: 'Stretch', score: 1 },//, meta: 'some' }, 
    { value: 'Substitute', score: 1 },//, meta: 'some' }, 
    { value: 'Sum', score: 1 },//, meta: 'some' }, 
    { value: 'SumSquaredErrors', score: 1 },//, meta: 'some' }, 
    { value: 'SurdText', score: 1 },//, meta: 'some' }, 
    { value: 'Surface', score: 1 },//, meta: 'some' }, 
    { value: 'SVD', score: 1 },//, meta: 'some' }, 
    { value: 'Sxx', score: 1 },//, meta: 'some' }, 
    { value: 'Sxy', score: 1 },//, meta: 'some' }, 
    { value: 'Syy', score: 1 },//, meta: 'some' }, 
    { value: 'TableText', score: 1 },//, meta: 'some' }, 
    { value: 'Take', score: 1 },//, meta: 'some' }, 
    { value: 'Tangent', score: 1 },//, meta: 'some' }, 
    { value: 'TaylorPolynomial', score: 1 },//, meta: 'some' }, 
    { value: 'TDistribution', score: 1 },//, meta: 'some' }, 
    { value: 'Tetrahedron', score: 1 },//, meta: 'some' }, 
    { value: 'Text', score: 1 },//, meta: 'some' }, 
    { value: 'TextToUnicode', score: 1 },//, meta: 'some' }, 
    { value: 'TiedRank', score: 1 },//, meta: 'some' }, 
    //{ value: 'TMean2Estimate', score: 1 },//, meta: 'some' }, 
    { value: 'TMeanEstimate', score: 1 },//, meta: 'some' }, 
    { value: 'ToBase', score: 1 },//, meta: 'some' }, 
    { value: 'ToComplex', score: 1 },//, meta: 'some' }, 
    { value: 'ToExponential', score: 1 },//, meta: 'some' }, 
    { value: 'ToolImage', score: 1 },//, meta: 'some' }, 
    { value: 'Top', score: 1 },//, meta: 'some' }, 
    { value: 'ToPoint', score: 1 },//, meta: 'some' }, 
    { value: 'ToPolar', score: 1 },//, meta: 'some' }, 
    { value: 'Translate', score: 1 },//, meta: 'some' }, 
    { value: 'Transpose', score: 1 },//, meta: 'some' }, 
    { value: 'TrapezoidalSum', score: 1 },//, meta: 'some' }, 
    { value: 'TravelingSalesman', score: 1 },//, meta: 'some' }, 
    { value: 'TriangleCenter', score: 1 },//, meta: 'some' }, 
    { value: 'TriangleCurve', score: 1 },//, meta: 'some' }, 
    { value: 'Triangular', score: 1 },//, meta: 'some' }, 
    { value: 'TrigCombine', score: 1 },//, meta: 'some' }, 
    { value: 'TrigExpand', score: 1 },//, meta: 'some' }, 
    { value: 'TrigSimplify', score: 1 },//, meta: 'some' }, 
    { value: 'Trilinear', score: 1 },//, meta: 'some' }, 
    { value: 'TTest', score: 1 },//, meta: 'some' }, 
    //{ value: 'TTest2', score: 1 },//, meta: 'some' }, 
    { value: 'TTestPaired', score: 1 },//, meta: 'some' }, 
    { value: 'Turtle', score: 1 },//, meta: 'some' }, 
    { value: 'TurtleBack', score: 1 },//, meta: 'some' }, 
    { value: 'TurtleDown', score: 1 },//, meta: 'some' }, 
    { value: 'TurtleForward', score: 1 },//, meta: 'some' }, 
    { value: 'TurtleLeft', score: 1 },//, meta: 'some' }, 
    { value: 'TurtleRight', score: 1 },//, meta: 'some' }, 
    { value: 'TurtleUp', score: 1 },//, meta: 'some' }, 
    { value: 'Type', score: 1 },//, meta: 'some' }, 
    { value: 'UnicodeToLetter', score: 1 },//, meta: 'some' }, 
    { value: 'UnicodeToText', score: 1 },//, meta: 'some' }, 
    { value: 'Uniform', score: 1 },//, meta: 'some' }, 
    { value: 'Union', score: 1 },//, meta: 'some' }, 
    { value: 'Unique', score: 1 },//, meta: 'some' }, 
    { value: 'UnitPerpendicularVector', score: 1 },//, meta: 'some' }, 
    { value: 'UnitVector', score: 1 },//, meta: 'some' }, 
    { value: 'UpdateConstruction', score: 1 },//, meta: 'some' }, 
    { value: 'UpperSum', score: 1 },//, meta: 'some' }, 
    { value: 'Variance', score: 1 },//, meta: 'some' }, 
    { value: 'Vector', score: 1 },//, meta: 'some' }, 
    { value: 'Vertex', score: 1 },//, meta: 'some' }, 
    { value: 'VerticalText', score: 1 },//, meta: 'some' }, 
    { value: 'Volume', score: 1 },//, meta: 'some' }, 
    { value: 'Voronoi', score: 1 },//, meta: 'some' }, 
    { value: 'Weibull', score: 1 },//, meta: 'some' }, 
    { value: 'Zip', score: 1 },//, meta: 'some' }, 
    { value: 'Zipf', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZMean2Estimate', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZMean2Test', score: 1 },//, meta: 'some' }, 
    { value: 'ZMeanEstimate', score: 1 },//, meta: 'some' }, 
    { value: 'ZMeanTest', score: 1 },//, meta: 'some' }, 
    { value: 'ZoomIn', score: 1 },//, meta: 'some' }, 
    { value: 'ZoomOut', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZProportion2Estimate', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZProportion2Test', score: 1 },//, meta: 'some' }, 
    { value: 'ZProportionEstimate', score: 1 },//, meta: 'some' }, 
    { value: 'ZProportionTest', score: 1 },// meta: 'some' }, 

    // Vectors and matrix commands
    { value: 'ApplyMatrix', score: 1 },//, meta: 'some' }, 
    { value: 'Determinant', score: 1 },//, meta: 'some' }, 
    { value: 'Dimension', score: 1 },//, meta: 'some' }, 
    { value: 'Identity', score: 1 },//, meta: 'some' }, 
    { value: 'Invert', score: 1 },//, meta: 'some' }, 
    { value: 'MatrixRank', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularVector', score: 1 },//, meta: 'some' }, 
    { value: 'ReducedRowEchelonForm', score: 1 },//, meta: 'some' }, 
    { value: 'Transpose', score: 1 },//, meta: 'some' }, 
    { value: 'UnitPerpendicularVector', score: 1 },//, meta: 'some' }, 
    { value: 'UnitVector', score: 1 },//, meta: 'some' }, 
    { value: 'Vector', score: 1 },// meta: 'some' }, 

    // Transformation Commands
    { value: 'Dilate', score: 1 },//, meta: 'some' }, 
    { value: 'Reflect', score: 1 },//, meta: 'some' }, 
    { value: 'Rotate', score: 1 },//, meta: 'some' }, 
    { value: 'Shear', score: 1 },//, meta: 'some' }, 
    { value: 'Stretch', score: 1 },//, meta: 'some' }, 
    { value: 'Translate', score: 1 },// meta: 'some' }, 

    // Text Commands
    { value: 'ContinuedFraction', score: 1 },//, meta: 'some' }, 
    { value: 'FormulaText', score: 1 },//, meta: 'some' }, 
    { value: 'FractionText', score: 1 },//, meta: 'some' }, 
    { value: 'LetterToUnicode', score: 1 },//, meta: 'some' }, 
    { value: 'Ordinal', score: 1 },//, meta: 'some' }, 
    { value: 'ReplaceAll', score: 1 },//, meta: 'some' }, 
    { value: 'RotateText', score: 1 },//, meta: 'some' }, 
    { value: 'Split', score: 1 },//, meta: 'some' }, 
    { value: 'StandardForm', score: 1 },//, meta: 'some' }, 
    { value: 'SurdText', score: 1 },//, meta: 'some' }, 
    { value: 'TableText', score: 1 },//, meta: 'some' }, 
    { value: 'Text', score: 1 },//, meta: 'some' }, 
    { value: 'TextToUnicode', score: 1 },//, meta: 'some' }, 
    { value: 'UnicodeToLetter', score: 1 },//, meta: 'some' }, 
    { value: 'UnicodeToText', score: 1 },//, meta: 'some' }, 
    { value: 'VerticalText', score: 1 },// meta: 'some' }, 


    // Statistics Commands
    { value: 'ANOVA', score: 1 },//, meta: 'some' }, 
    { value: 'ChiSquaredTest', score: 1 },//, meta: 'some' }, 
    { value: 'CorrelationCoefficient', score: 1 },//, meta: 'some' }, 
    { value: 'Covariance', score: 1 },//, meta: 'some' }, 
    { value: 'Fit', score: 1 },//, meta: 'some' }, 
    { value: 'FitExp', score: 1 },//, meta: 'some' }, 
    { value: 'FitGrowth', score: 1 },//, meta: 'some' }, 
    { value: 'FitImplicit', score: 1 },//, meta: 'some' }, 
    { value: 'FitLine', score: 1 },//, meta: 'some' }, 
    { value: 'FitLineX', score: 1 },//, meta: 'some' }, 
    { value: 'FitLog', score: 1 },//, meta: 'some' }, 
    { value: 'FitLogistic', score: 1 },//, meta: 'some' }, 
    { value: 'FitPoly', score: 1 },//, meta: 'some' }, 
    { value: 'FitPow', score: 1 },//, meta: 'some' }, 
    { value: 'FitSin', score: 1 },//, meta: 'some' }, 
    { value: 'GeometricMean', score: 1 },//, meta: 'some' }, 
    { value: 'HarmonicMean', score: 1 },//, meta: 'some' }, 
    { value: 'InverseExponential', score: 1 },//, meta: 'some' }, 
    { value: 'InverseZipf', score: 1 },//, meta: 'some' }, 
    { value: 'Mean', score: 1 },//, meta: 'some' }, 
    { value: 'MeanX', score: 1 },//, meta: 'some' }, 
    { value: 'MeanY', score: 1 },//, meta: 'some' }, 
    { value: 'Median', score: 1 },//, meta: 'some' }, 
    { value: 'Mode', score: 1 },//, meta: 'some' }, 
    { value: 'Percentile', score: 1 },//, meta: 'some' }, 
    //{ value: 'Quartile1', score: 1 },//, meta: 'some' }, 
    //{ value: 'Quartile3', score: 1 },//, meta: 'some' }, 
    { value: 'RSquare', score: 1 },//, meta: 'some' }, 
    { value: 'RootMeanSquare', score: 1 },//, meta: 'some' }, 
    { value: 'SD', score: 1 },//, meta: 'some' }, 
    { value: 'SDX', score: 1 },//, meta: 'some' }, 
    { value: 'SDY', score: 1 },//, meta: 'some' }, 
    { value: 'Sample', score: 1 },//, meta: 'some' }, 
    { value: 'SampleSD', score: 1 },//, meta: 'some' }, 
    { value: 'SampleSDX', score: 1 },//, meta: 'some' }, 
    { value: 'SampleSDY', score: 1 },//, meta: 'some' }, 
    { value: 'SampleVariance', score: 1 },//, meta: 'some' }, 
    { value: 'Shuffle', score: 1 },//, meta: 'some' }, 
    { value: 'SigmaXX', score: 1 },//, meta: 'some' }, 
    { value: 'SigmaXY', score: 1 },//, meta: 'some' }, 
    { value: 'SigmaYY', score: 1 },//, meta: 'some' }, 
    { value: 'Spearman', score: 1 },//, meta: 'some' }, 
    { value: 'Sum', score: 1 },//, meta: 'some' }, 
    { value: 'SumSquaredErrors', score: 1 },//, meta: 'some' }, 
    { value: 'Sxx', score: 1 },//, meta: 'some' }, 
    { value: 'Sxy', score: 1 },//, meta: 'some' }, 
    { value: 'Syy', score: 1 },//, meta: 'some' }, 
    //{ value: 'TMean2Estimate', score: 1 },//, meta: 'some' }, 
    //{ value: 'TMeanEstimate', score: 1 },//, meta: 'some' }, 
    { value: 'TTest', score: 1 },//, meta: 'some' }, 
    //{ value: 'TTest2', score: 1 },//, meta: 'some' }, 
    { value: 'TTestPaired', score: 1 },//, meta: 'some' }, 
    { value: 'Variance', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZMean2Estimate', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZMean2Test', score: 1 },//, meta: 'some' }, 
    { value: 'ZMeanEstimate', score: 1 },//, meta: 'some' }, 
    { value: 'ZMeanTest', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZProportion2Estimate', score: 1 },//, meta: 'some' }, 
    //{ value: 'ZProportion2Test', score: 1 },//, meta: 'some' }, 
    { value: 'ZProportionEstimate', score: 1 },//, meta: 'some' }, 
    { value: 'ZProportionTest', score: 1 },// meta: 'some' }, 

    // Spreadsheet Commands
    { value: 'Cell', score: 1 },//, meta: 'some' }, 
    { value: 'CellRange', score: 1 },//, meta: 'some' }, 
    { value: 'Column', score: 1 },//, meta: 'some' }, 
    { value: 'ColumnName', score: 1 },//, meta: 'some' }, 
    { value: 'FillCells', score: 1 },//, meta: 'some' }, 
    { value: 'FillColumn', score: 1 },//, meta: 'some' }, 
    { value: 'FillRow', score: 1 },//, meta: 'some' }, 
    { value: 'Row', score: 1 },// meta: 'some' }, 


    // Optimization Commands
    { value: 'Maximize', score: 1 },//, meta: 'some' }, 
    { value: 'Minimize', score: 1 },// meta: 'some' }, 

    // Logic Commands
    { value: 'CountIf ', score: 1 },//, meta: 'some' }, 
    { value: 'If ', score: 1 },//, meta: 'some' }, 
    { value: 'IsDefined ', score: 1 },//, meta: 'some' }, 
    { value: 'IsInRegion ', score: 1 },//, meta: 'some' }, 
    { value: 'IsInteger ', score: 1 },//, meta: 'some' }, 
    { value: 'KeepIf ', score: 1 },//, meta: 'some' }, 
    { value: 'Relation', score: 1 },// meta: 'some' }, 

    // first page Commands
    // https://wiki.geogebra.org/s/en/index.php?title=Category:Commands&pageuntil=InverseNormal+Command#mw-pages
    { value: 'CommonDenominator', score: 1 },//, meta: 'some' }, 
    { value: 'CompleteSquare', score: 1 },//, meta: 'some' }, 
    { value: 'Cross', score: 1 },//, meta: 'some' }, 
    { value: 'Div', score: 1 },//, meta: 'some' }, 
    { value: 'Division', score: 1 },//, meta: 'some' }, 
    { value: 'Divisors', score: 1 },//, meta: 'some' }, 
    { value: 'DivisorsList', score: 1 },//, meta: 'some' }, 
    { value: 'DivisorsSum', score: 1 },//, meta: 'some' }, 
    { value: 'Dot', score: 1 },//, meta: 'some' }, 
    { value: 'Expand', score: 1 },//, meta: 'some' }, 
    { value: 'Factor', score: 1 },//, meta: 'some' }, 
    { value: 'FromBase', score: 1 },//, meta: 'some' }, 
    { value: 'GCD', score: 1 },//, meta: 'some' }, 
    { value: 'IFactor', score: 1 },//, meta: 'some' }, 
    { value: 'IsPrime', score: 1 },//, meta: 'some' }, 
    { value: 'LCM', score: 1 },//, meta: 'some' }, 
    { value: 'LeftSide', score: 1 },//, meta: 'some' }, 
    { value: 'Max', score: 1 },//, meta: 'some' }, 
    { value: 'Min', score: 1 },//, meta: 'some' }, 
    { value: 'Mod', score: 1 },//, meta: 'some' }, 
    { value: 'NextPrime', score: 1 },//, meta: 'some' }, 
    { value: 'PreviousPrime', score: 1 },//, meta: 'some' }, 
    { value: 'PrimeFactors', score: 1 },//, meta: 'some' }, 
    { value: 'RightSide', score: 1 },//, meta: 'some' }, 
    { value: 'Simplify', score: 1 },//, meta: 'some' }, 
    { value: 'ToBase', score: 1 },//, meta: 'some' }, 
    { value: 'Axes', score: 1 },//, meta: 'some' }, 
    { value: 'Center', score: 1 },//, meta: 'some' }, 
    { value: 'Circle', score: 1 },//, meta: 'some' }, 
    { value: 'Conic', score: 1 },//, meta: 'some' }, 
    { value: 'ConjugateDiameter', score: 1 },//, meta: 'some' }, 
    { value: 'Directrix', score: 1 },//, meta: 'some' }, 
    { value: 'Eccentricity', score: 1 },//, meta: 'some' }, 
    { value: 'Ellipse', score: 1 },//, meta: 'some' }, 
    { value: 'Focus', score: 1 },//, meta: 'some' }, 
    { value: 'Hyperbola', score: 1 },//, meta: 'some' }, 
    { value: 'Incircle', score: 1 },//, meta: 'some' }, 
    { value: 'LinearEccentricity', score: 1 },//, meta: 'some' }, 
    { value: 'MajorAxis', score: 1 },//, meta: 'some' }, 
    { value: 'MinorAxis', score: 1 },//, meta: 'some' }, 
    { value: 'Parabola', score: 1 },//, meta: 'some' }, 
    { value: 'Parameter', score: 1 },//, meta: 'some' }, 
    { value: 'Polar', score: 1 },//, meta: 'some' }, 
    { value: 'SemiMajorAxisLength', score: 1 },//, meta: 'some' }, 
    { value: 'SemiMinorAxisLength', score: 1 },//, meta: 'some' }, 
    { value: 'Semicircle', score: 1 },//, meta: 'some' }, 
    { value: 'ConvexHull', score: 1 },//, meta: 'some' }, 
    { value: 'DelaunayTriangulation', score: 1 },//, meta: 'some' }, 
    { value: 'MinimumSpanningTree', score: 1 },//, meta: 'some' }, 
    { value: 'ShortestDistance', score: 1 },//, meta: 'some' }, 
    { value: 'TravelingSalesman', score: 1 },//, meta: 'some' }, 
    { value: 'Voronoi', score: 1 },//, meta: 'some' }, 
    { value: 'FutureValue', score: 1 },//, meta: 'some' }, 
    { value: 'Payment', score: 1 },//, meta: 'some' }, 
    { value: 'Periods', score: 1 },//, meta: 'some' }, 
    { value: 'PresentValue', score: 1 },//, meta: 'some' }, 
    { value: 'Rate', score: 1 },//, meta: 'some' }, 
    { value: 'Asymptote', score: 1 },//, meta: 'some' }, 
    { value: 'Coefficients', score: 1 },//, meta: 'some' }, 
    { value: 'ComplexRoot', score: 1 },//, meta: 'some' }, 
    { value: 'Curvature', score: 1 },//, meta: 'some' }, 
    { value: 'CurvatureVector', score: 1 },//, meta: 'some' }, 
    { value: 'Curve', score: 1 },//, meta: 'some' }, 
    { value: 'DataFunction', score: 1 },//, meta: 'some' }, 
    { value: 'Degree', score: 1 },//, meta: 'some' }, 
    { value: 'Denominator', score: 1 },//, meta: 'some' }, 
    { value: 'Derivative', score: 1 },//, meta: 'some' }, 
    { value: 'Extremum', score: 1 },//, meta: 'some' }, 
    { value: 'Factors', score: 1 },//, meta: 'some' }, 
    { value: 'Function', score: 1 },//, meta: 'some' }, 
    { value: 'ImplicitCurve', score: 1 },//, meta: 'some' }, 
    { value: 'ImplicitDerivative', score: 1 },//, meta: 'some' }, 
    { value: 'Integral', score: 1 },//, meta: 'some' }, 
    { value: 'IntegralBetween', score: 1 },//, meta: 'some' }, 
    { value: 'IntegralSymbolic', score: 1 },//, meta: 'some' }, 
    { value: 'Iteration', score: 1 },//, meta: 'some' }, 
    { value: 'IterationList', score: 1 },//, meta: 'some' }, 
    { value: 'LeftSum', score: 1 },//, meta: 'some' }, 
    { value: 'Limit', score: 1 },//, meta: 'some' }, 
    { value: 'LimitAbove', score: 1 },//, meta: 'some' }, 
    { value: 'LimitBelow', score: 1 },//, meta: 'some' }, 
    { value: 'LowerSum', score: 1 },//, meta: 'some' }, 
    { value: 'NSolveODE', score: 1 },//, meta: 'some' }, 
    { value: 'Normalize', score: 1 },//, meta: 'some' }, 
    { value: 'Numerator', score: 1 },//, meta: 'some' }, 
    { value: 'OsculatingCircle', score: 1 },//, meta: 'some' }, 
    { value: 'ParametricDerivative', score: 1 },//, meta: 'some' }, 
    { value: 'PartialFractions', score: 1 },//, meta: 'some' }, 
    { value: 'PathParameter', score: 1 },//, meta: 'some' }, 
    { value: 'PlotSolve', score: 1 },//, meta: 'some' }, 
    { value: 'Polynomial', score: 1 },//, meta: 'some' }, 
    { value: 'RectangleSum', score: 1 },//, meta: 'some' }, 
    { value: 'RemovableDiscontinuity', score: 1 },//, meta: 'some' }, 
    { value: 'Root', score: 1 },//, meta: 'some' }, 
    { value: 'RootList', score: 1 },//, meta: 'some' }, 
    { value: 'Roots', score: 1 },//, meta: 'some' }, 
    { value: 'SlopeField', score: 1 },//, meta: 'some' }, 
    { value: 'SolveODE', score: 1 },//, meta: 'some' }, 
    { value: 'Spline', score: 1 },//, meta: 'some' }, 
    { value: 'TaylorPolynomial', score: 1 },//, meta: 'some' }, 
    { value: 'TrapezoidalSum', score: 1 },//, meta: 'some' }, 
    { value: 'TrigCombine', score: 1 },//, meta: 'some' }, 
    { value: 'TrigExpand', score: 1 },//, meta: 'some' }, 
    { value: 'TrigSimplify', score: 1 },//, meta: 'some' }, 
    { value: 'UpperSum', score: 1 },//, meta: 'some' }, 
    { value: 'AxisStepX', score: 1 },//, meta: 'some' }, 
    { value: 'AxisStepY', score: 1 },//, meta: 'some' }, 
    { value: 'ConstructionStep', score: 1 },//, meta: 'some' }, 
    { value: 'Corner', score: 1 },//, meta: 'some' }, 
    { value: 'DynamicCoordinates', score: 1 },//, meta: 'some' }, 
    { value: 'Name', score: 1 },//, meta: 'some' }, 
    { value: 'Object', score: 1 },//, meta: 'some' }, 
    { value: 'SlowPlot', score: 1 },//, meta: 'some' }, 
    { value: 'ToComplex', score: 1 },//, meta: 'some' }, 
    { value: 'ToPoint', score: 1 },//, meta: 'some' }, 
    { value: 'ToPolar', score: 1 },//, meta: 'some' }, 
    { value: 'ToolImage', score: 1 },//, meta: 'some' }, 
    { value: 'AffineRatio', score: 1 },//, meta: 'some' }, 
    { value: 'Angle', score: 1 },//, meta: 'some' }, 
    { value: 'AngleBisector', score: 1 },//, meta: 'some' }, 
    { value: 'Arc', score: 1 },//, meta: 'some' }, 
    { value: 'AreCollinear', score: 1 },//, meta: 'some' }, 
    { value: 'AreConcurrent', score: 1 },//, meta: 'some' }, 
    { value: 'AreConcyclic', score: 1 },//, meta: 'some' }, 
    { value: 'AreCongruent', score: 1 },//, meta: 'some' }, 
    { value: 'AreEqual', score: 1 },//, meta: 'some' }, 
    { value: 'AreParallel', score: 1 },//, meta: 'some' }, 
    { value: 'ArePerpendicular', score: 1 },//, meta: 'some' }, 
    { value: 'Area', score: 1 },//, meta: 'some' }, 
    { value: 'Barycenter', score: 1 },//, meta: 'some' }, 
    { value: 'Centroid', score: 1 },//, meta: 'some' }, 
    { value: 'CircularArc', score: 1 },//, meta: 'some' }, 
    { value: 'CircularSector', score: 1 },//, meta: 'some' }, 
    { value: 'CircumcircularArc', score: 1 },//, meta: 'some' }, 
    { value: 'CircumcircularSector', score: 1 },//, meta: 'some' }, 
    { value: 'Circumference', score: 1 },//, meta: 'some' }, 
    { value: 'ClosestPoint', score: 1 },//, meta: 'some' }, 
    { value: 'ClosestPointRegion', score: 1 },//, meta: 'some' }, 
    { value: 'CrossRatio', score: 1 },//, meta: 'some' }, 
    { value: 'Cubic', score: 1 },//, meta: 'some' }, 
    { value: 'Direction', score: 1 },//, meta: 'some' }, 
    { value: 'Distance', score: 1 },//, meta: 'some' }, 
    { value: 'Envelope', score: 1 },//, meta: 'some' }, 
    { value: 'Intersect', score: 1 },//, meta: 'some' }, 
    { value: 'IntersectPath', score: 1 },//, meta: 'some' }, 
    { value: 'Intersection', score: 1 },//, meta: 'some' }, 
    { value: 'Length', score: 1 },//, meta: 'some' }, 
    { value: 'Line', score: 1 },//, meta: 'some' }, 
    { value: 'Locus', score: 1 },//, meta: 'some' }, 
    { value: 'LocusEquation', score: 1 },//, meta: 'some' }, 
    { value: 'Midpoint', score: 1 },//, meta: 'some' }, 
    { value: 'Perimeter', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularBisector', score: 1 },//, meta: 'some' }, 
    { value: 'PerpendicularLine', score: 1 },//, meta: 'some' }, 
    { value: 'Point', score: 1 },//, meta: 'some' }, 
    { value: 'PointIn', score: 1 },//, meta: 'some' }, 
    { value: 'Polygon', score: 1 },//, meta: 'some' }, 
    { value: 'Polyline', score: 1 },//, meta: 'some' }, 
    { value: 'Prove', score: 1 },//, meta: 'some' }, 
    { value: 'ProveDetails', score: 1 },//, meta: 'some' }, 
    { value: 'Radius', score: 1 },//, meta: 'some' }, 
    { value: 'Ray', score: 1 },//, meta: 'some' }, 
    { value: 'RigidPolygon', score: 1 },//, meta: 'some' }, 
    { value: 'Sector', score: 1 },//, meta: 'some' }, 
    { value: 'Segment', score: 1 },//, meta: 'some' }, 
    { value: 'Slope', score: 1 },//, meta: 'some' }, 
    { value: 'Tangent', score: 1 },//, meta: 'some' }, 
    { value: 'TriangleCenter', score: 1 },//, meta: 'some' }, 
    { value: 'TriangleCurve', score: 1 },//, meta: 'some' }, 
    { value: 'Trilinear', score: 1 },//, meta: 'some' }, 
    { value: 'Vertex', score: 1 },// meta: 'some' }, 
];

let keywordRegex = '(' + autoCompleteCallbackData.map(item => item.value).join('|') + ')'

export { autoCompleteCallbackData, keywordRegex }
